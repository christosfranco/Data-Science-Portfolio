<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Main Page</title>
    <link>https://christosfranco.github.io/Data-Science-Portfolio/post/</link>
    <description>Recent content in Projects on Main Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://christosfranco.github.io/Data-Science-Portfolio/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DataProcessingSQL</title>
      <link>https://christosfranco.github.io/Data-Science-Portfolio/post/dataprocessingsql/</link>
      <pubDate>Fri, 12 Feb 2021 11:25:05 -0400</pubDate>
      
      <guid>https://christosfranco.github.io/Data-Science-Portfolio/post/dataprocessingsql/</guid>
      <description>{Know our data} {The design of the schema that contains the data from the FakeNews Corpus data set} In our design of the schema, we have tried to reduce various anomalies as much as possible. We started by cramming all the data into a single relation, but we quickly found out that this created a lot of anomalies. Therefore, we iteratively decomposed this relations until we ended up with the design that can be viewed on figure \ref{fig:er-diagram-fakenews-corpus}.</description>
    </item>
    
    <item>
      <title>Linear regression - House Prices</title>
      <link>https://christosfranco.github.io/Data-Science-Portfolio/post/linearreg/</link>
      <pubDate>Fri, 12 Feb 2021 11:25:05 -0400</pubDate>
      
      <guid>https://christosfranco.github.io/Data-Science-Portfolio/post/linearreg/</guid>
      <description>Link to github repo
 Boston Housing Data - House Price TV adds - Sales Olympic race data - Time Medical Insurance Patients - Cost of Product  This Project aims to visualize some relations between features and their respective values.
In the case of the Boston Housing Data, with different features such as: age of the house, infrastructure in area, ecology, as well as other data about the residents.</description>
    </item>
    
    <item>
      <title>PCA and classifications</title>
      <link>https://christosfranco.github.io/Data-Science-Portfolio/post/pca/</link>
      <pubDate>Fri, 12 Feb 2021 11:25:05 -0400</pubDate>
      
      <guid>https://christosfranco.github.io/Data-Science-Portfolio/post/pca/</guid>
      <description>Principal component analysis: Some few tool to analyze the specific impact of each feature, and their impact on the label.
The tool is applied to a dataset of flowers, where we try to classify which features of the plant correspond to the specific flower.
We have four features sepal width, sepal length, petal width, and petal length. All are in cm.
The labels or the flowers we are trying to classify are Iris Setosa (label = 0), Iris Versicolour (label = 1), Iris Virginica (label = 2)</description>
    </item>
    
    <item>
      <title>Support vector machine - Linear</title>
      <link>https://christosfranco.github.io/Data-Science-Portfolio/post/svm/</link>
      <pubDate>Fri, 12 Feb 2021 11:25:05 -0400</pubDate>
      
      <guid>https://christosfranco.github.io/Data-Science-Portfolio/post/svm/</guid>
      <description>Support vector machine is a classification algorithm. The idea behind the algorithm is that it tries to seperate 2 different labeled datasets. Compared to kNN and RandomForest, this is a supervised algorithm. Hence meaning that we use our labeled data to divide/classify our datapoints.
We divide the dataset utilizing a hyperplane. A hyperplane is a function of degree (Features-1), 2 features will entail a function of degree 1 (a line). 3 features will be a 2 dimensional plane.</description>
    </item>
    
    <item>
      <title>Urban Sound Processing and Neural Network Model</title>
      <link>https://christosfranco.github.io/Data-Science-Portfolio/post/soundnn/</link>
      <pubDate>Fri, 12 Feb 2021 11:25:05 -0400</pubDate>
      
      <guid>https://christosfranco.github.io/Data-Science-Portfolio/post/soundnn/</guid>
      <description>Link to github repo
Link to kaggle repo
Link To Dataset
  Neural Network model num_labels = yy.shape[1] def build_model_graph(input_shape=(n_mfcc,)): model = Sequential() model.add(Dense(256)) model.add(Activation(&amp;#39;relu&amp;#39;)) model.add(Dropout(0.5)) model.add(Dense(256)) model.add(Activation(&amp;#39;relu&amp;#39;)) model.add(Dropout(0.5)) model.add(Dense(num_labels)) model.add(Activation(&amp;#39;softmax&amp;#39;)) # Compile the model model.compile(loss=&amp;#39;categorical_crossentropy&amp;#39;, metrics=[&amp;#39;accuracy&amp;#39;], optimizer=&amp;#39;adam&amp;#39;) return model model = build_model_graph() #Play a sound from the dataset sound_file = &amp;#39;/kaggle/input/urbansounds/UrbanSound8K/audio/&amp;#39; for index, row in df_unequal.iterrows(): slice_name = row[&amp;#39;file_name&amp;#39;] name= sound_file+slice_name print(&amp;#34;Name of file: {}, Predicted to be: {}, Real Value: {}&amp;#34;.</description>
    </item>
    
  </channel>
</rss>
