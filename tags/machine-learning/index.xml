<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>machine learning on Main Page</title>
    <link>https://christosfranco.github.io/Data-Science-Portfolio/tags/machine-learning/</link>
    <description>Recent content in machine learning on Main Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Feb 2021 11:25:05 -0400</lastBuildDate><atom:link href="https://christosfranco.github.io/Data-Science-Portfolio/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Urban Sound Processing and Neural Network Model</title>
      <link>https://christosfranco.github.io/Data-Science-Portfolio/post/soundnn/</link>
      <pubDate>Fri, 12 Feb 2021 11:25:05 -0400</pubDate>
      
      <guid>https://christosfranco.github.io/Data-Science-Portfolio/post/soundnn/</guid>
      <description>Link to github repo
Link to kaggle repo
Link To Dataset
  Neural Network model num_labels = yy.shape[1] def build_model_graph(input_shape=(n_mfcc,)): model = Sequential() model.add(Dense(256)) model.add(Activation(&amp;#39;relu&amp;#39;)) model.add(Dropout(0.5)) model.add(Dense(256)) model.add(Activation(&amp;#39;relu&amp;#39;)) model.add(Dropout(0.5)) model.add(Dense(num_labels)) model.add(Activation(&amp;#39;softmax&amp;#39;)) # Compile the model model.compile(loss=&amp;#39;categorical_crossentropy&amp;#39;, metrics=[&amp;#39;accuracy&amp;#39;], optimizer=&amp;#39;adam&amp;#39;) return model model = build_model_graph() #Play a sound from the dataset sound_file = &amp;#39;/kaggle/input/urbansounds/UrbanSound8K/audio/&amp;#39; for index, row in df_unequal.iterrows(): slice_name = row[&amp;#39;file_name&amp;#39;] name= sound_file+slice_name print(&amp;#34;Name of file: {}, Predicted to be: {}, Real Value: {}&amp;#34;.</description>
    </item>
    
  </channel>
</rss>
